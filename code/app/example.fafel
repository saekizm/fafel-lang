contract myContract {
state {
value : int
myList : [int]
mymap : mapping(int->int)
}


addValue : (state -> int) -> int
addValue s x = s.value + 3 * 2

accessMapping : (state -> int) -> int
accessMapping s x = mymap{x}


addMapping : (state -> int -> int) -> state
addMapping s m x = mymap{m} = x

getValue : (state) -> int
getValue s = s.value

}
