fafel myContract {
    state {
        value : int
        myList : [int]
        mymap : mapping(int->int)
        myMap2 : mapping(int->int)
}

addValue : (int) -> float
addValue x = value + 3 * 2.1

accessMapping : (int) -> int
accessMapping x = mymap{x}

addMapping : (int -> int) -> state
addMapping m x = mymap{m} = x

getValue : () -> int
getValue = value

}
